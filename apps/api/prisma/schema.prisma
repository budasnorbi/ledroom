generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:admin@localhost:3002/postgres?schema=ledroom"
}

model song {
  songId           String   @id() @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  bpm              Int      @default(0)
  beatOffset       Float    @default(0)
  beatAroundEnd    Float    @default(0)
  name             String   @db.VarChar
  lastTimePosition Float    @default(0)
  volume           Float    @default(0.15)
  selected         Boolean  @default(true)
  path             String   @db.VarChar
  regions          region[]
}

model region {
  regionId      String         @id() @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  songId        String         @db.Uuid
  startTime     Float          @default(0)
  endTime       Float          @default(0)
  selected      Boolean        @default(true)
  song          song           @relation(fields: [songId], references: [songId], onDelete: Cascade, onUpdate: NoAction)
}

model step_effects {
  stepEffectId String  @id() @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  regionId String @unique() @db.Uuid
  type         String  @default("step")
  barColor     Json    @db.Json
  clipColor    Json    @db.Json
  speed        Float   @default(1)
  barCount     Int     @default(50) @db.SmallInt
  direction    String  @default("left") @db.Char(5)
  selected     Boolean @default(true)
}

model blink_effects {
  blinkEffectId String  @id() @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  regionId String  @unique() @db.Uuid
  type          String  @default("blink")
  barColor      Json    @db.Json
  clipColor     Json    @db.Json
  speed         Float   @default(1)
  barCount      Int     @default(50) @db.SmallInt
  direction     String  @default("left") @db.Char(5)
  selected      Boolean @default(true)
}
